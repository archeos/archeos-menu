Common workflow to interact with github, archeos-menu and all the rest.

archeos-menu package provides customizations to the standard gnome menu

The correct way to submit changes to this package is explained below, together 
with some information on how to build the package and so on.
Please read carefully before any modification.

[Prerequisites]
	* A working ArcheOS, better on VirtualBox to test the package
	* The following packages installed (on a Debian/Ubuntu/ArcheOS system): 
	  git-core, lintian, dpkg-dev
	* Be sure to be signed on github, otherwise please register 
	  https://github.com/signup/free
	  After that be sure to generate and upload your ssh publick key to your github 
	  profile
	  http://help.github.com/linux-key-setup/
	* Basic knowledge on how XDG menu works 
	  http://standards.freedesktop.org/menu-spec/menu-spec-1.0.html
	* Basic knowledge on bash and dpkg-build
	  http://tldp.org/HOWTO/html_single/Debian-Binary-Package-Building-HOWTO/
	* Some git knowledge. The help.github.com portal is a great place to 
	  start learning the git way to manage the code!

[Download archeos-menu]
	* Clone this repository in order to work with the archeos-menu package: 
	  git clone git@github.com:archeos/archeos-menu.git
	* The best way to interact with git and github should be to fork the package 
	  and pull requests, but for this small package I prefer to add people 
	  who request as contributors. So, if you're not, subscribe to github, load 
	  your publick key and ask me for a collaboration!

[Start working on the package]
	* Enter into the archeos-menu folder. There are respectively an 
	  archeos-menu_package subfolder (yes, same name) and this README file. 
	* Usually the main file to edit to make some modification is 
	  archeos-menu_package/etc/xdg/menus/gnome-applications.menu
	* Create a branch to work naming it with the issue number and a small 
	  description
	* Start working, edit files and so on
	* Change the version of the package on archeos-menu_pacakge/DEBIAN/control
	  and describe what you've done on 
	  archeos-menu_package/usr/share/doc/archeos-menu/changelog following the 
	  formatting convention.
	* When you're done be sure to add all the files you've modified to the
	  package with:
	  git add .
	* Commit your changes describing as best as you can the modifications
	  git commit -m "What I've made...blablabla"

[Packaging and testing]
      	* Now it's time to test your package.
	  Copy the archeos-menu_package folder into another, out of this repos
	  folder, eg. /tmp/
	* Go to that folder and build the package with 
	  sudo dpkg -b archeos-menu_package archeos-menu_X.X-archeosX.XX_all.deb
	* Test the package with lintian
	* Copy the package to a (virtualized) fresh ArcheOS and try to install it
	  with:
	  sudo dpkg -i archeos-menu_X.XarcheosX.XX_all.deb
	* Test your modifications

[Finalizing]
	* After you're done with testing, it's time to push your changes to the
	  upstream repository and tag the version
	* Come back to the main archeos-menu folder
	* See if there are untracked files with
	  git status
	* Pull the latest version of the package from the repository and check if 
	  there are conflicts
	  git pull
	* Merge the package with the master branch:
	  git checkout master
	  git merge <your branch name>
	* Tag your commit using the same version as the DEBIAN/control file:
	  git tag X.X-archeosX.XX
	  If you have a gpg public key you can sign the tag using:
	  git tag -s X.Xa-rcheosX.XX
	* Push your work to the upstream repository with
	  git push
	* Push your tag too
	  git push --tag
	* Finished!

[Example]

This example shows you how to work effectively with the package using git and all
other tools described above. Note that your path or command may be different from
these...

Let's suppose that we've an issue on the archeos-menu package for the iceweasel
icon that does not display on the menu. The issue has been opened as #301 and the
current version of archeos-menu is 0.2-archeos1.41

I assume also that you're subscribed already to github and you've completed all
steps described into the [Prerequisites] section.


First of all, if we didn't already, let's clone the repository and check that the
version we're working is the expected one:

	git clone git@github.com:archeos/archeos-menu.git
	git tag -l

The last tag on the bottom should be our expected version of the 
package: 0.2-archeos1.41
We want to fix the issue #301 so create and swithc tothe appropriate branch:

   	git branch 301-iceweasel-icon
	git checkout 301-iceweasel-icon

Now we work in this separate branch that we'll merge after the testing. Can check
the brach you're actually working on with

    	git branch -a

Let's modify our files, do the needed stuff to fix the bug and then we decide that
is arrived the moment to test if is working. So we need, in order to make a fully
functionale package, to change the control's version and update the changelog.
Edit the file:

     	archeos-menu_package/DEBIAN/control

and update the field "Version:" to 0.2-archeos1.41
Unzip and update also the changelog with

        gunzip archeos-menu_package/usr/share/doc/archeos-menu/changelog.gz
	edit archeos-menu_package/usr/share/doc/archeos-menu/changelog

file to reflect your changes. The description of the changes made can be used
later for the commit.
Compress it it with:

        gzip --best archeos-menu_package/usr/share/doc/archeos-menu/changelog

Look with 

        git status

that all the files that git consider modified are the files you actually edit. If
is all correct you can add all to the branch with

        git add .

And commit what you've done (you remember the changelog description?) with:

    	git commit -m "Describe here what you've done...."

It's time to package all to do some test. Copy the archeos-menu_package/ subfolder
into /tmp/ so we can work there without being worry to mess the repository:

        cp -ra archeos-menu_package/ /tmp/
	cd /tmp/

To build the package we need to do some basilar operation to avoid the excessive
lintian complains: first set correct permissions to the package:

	sudo chown -R root:root archeos-menu_package/

Then we can build our package:

     	sudo dpkg -b archeos-menu_package/ archeos-menu_0.2-archeos1.41_all.deb

After that copy it (with scp or other ways) to your ArcheOS fresh installation 
(be sure that the archeos-menu package on that machine is lesser than our just
built one...) and install it with:

      	sudo dpkg -i archeos-menu_0.2-archeos1.41_all.deb

Now, the art of testing and discoverying bugs is very old and complex and I've 
no time to explain it here (and I'm not the right person to do that) so I'll
just say: look very deeply to avoi regressions!
Once we've checked that our modifications works, the package is build and all
is correct is time to merge, tag and push!
Let's go back to our archeos-menu/ directoy and pull the latest updates on our
local repsitory; this to avoid that in the meantime someone else modified the
same our files.

        git pull origin master

That basically means "fetch all updates from the main remote repository and
store them into the branch called 'master'" that is...the master branch!
To merge our branch (301-iceweasel-icon, you remember?) we need to switch to
the master branch and then merge:

        git checkout master
	git merge 301-iceweasel-icon

A merge shrinks up the two branches to store all commits and modifications to
only one. It also checks if any file conflicts and, in case, offers the 
opportunity to solve the issues.
Now it's time to tag the version of the package. In git a tag is only a short
way to call a particular commit. Usually the commits are called with an ugly
alphanumeric name like e6460d7ec238535b02c3c72db605e76ada210ae3 (you can see
your commits with git log --stat). A tag instead is a more polite way to refer
to a particulare commit, and so to a particular moment or state, of the code,
so it's a way to version the code! Let's add the tag:

   	git tag "0.2-archeos1.41"

If you have a pulic GPG key and you want to use that to sign your tag so can
be verified by anyone that you are the actual father of the modifications,
you can do that with:

    	git tag -s "0.2-archeos1.41"

If you don't know what we're talking about you can ignore or read this useful
link: http://openpgpblog.tumblr.com/post/288011255/using-gpg-to-sign-git-tags
Now that we have commited, tested, merged and tagged our package let's push
it to the remote repository so other can fetch it and check/use/build:

        git push

And let's push the tag too:

    	git push --tag

Now we can check on the github page that all modifications are correctly
received.
If we don't need anymore we can delete our old 301-iceweasel-icon branch with

        git branch -d 301-iceweasel-icon

That's all. you can contact me freely for quesions or help wit git/the package
A last consideration: I'm not more than a GIT enthusiast, so don't blame me if
I forgot or misunderstood some git concepts; git is a very powerful tool that
have hundreds options and way to use it, and I'm sure that this is not the
best use. But IMHO is the simplest one for who approaches.
Uh, and sorry for my english too!